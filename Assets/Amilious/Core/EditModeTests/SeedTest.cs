using NUnit.Framework;
using UnityEngine;

namespace Amilious.Core.EditModeTests {
    
    public class SeedTest {

        [Test]
        public void NextFloat() {

            //generate a new seed
            var seed = new Seed();
            
            //generate some values
            var floatVal1 = seed.NextFloat();
            var floatVal2 = seed.NextFloat();
            
            //create new seed
            seed = new Seed(seed);
            
            //check the values generated by the new seed.
            Assert.AreEqual(floatVal1,seed.NextFloat());
            Assert.AreEqual(floatVal2,seed.NextFloat());

        }

        [Test]
        public void NextRange() {
            
            //generate a new seed
            var seed = new Seed();
            var min = 0;
            var max = 10;
            var minMax = new Vector2(min, max);

            //generate next range
            var rangeVal1 = seed.NextRange(min, max);
            var rangeVal2 = seed.NextRange(minMax);
            
            //create new seed
            seed = new Seed(seed);
            
            //run checks
            Assert.LessOrEqual(rangeVal1, max);
            Assert.LessOrEqual(rangeVal2, max);
            Assert.GreaterOrEqual(rangeVal1, min);
            Assert.GreaterOrEqual(rangeVal2, min);
            Assert.AreEqual(rangeVal1,seed.NextRange(minMax));
            Assert.AreEqual(rangeVal2,seed.NextRange(min,max));

        }

        [Test]
        public void NextBool() {
            
            //generate a new seed
            var seed = new Seed();
            
            //generate some values
            var boolVal1 = seed.NextBool();
            var boolVal2 = seed.NextBool();
            
            //create new seed
            seed = new Seed(seed);
            
            //check the values generated by the new seed.
            Assert.AreEqual(boolVal1,seed.NextBool());
            Assert.AreEqual(boolVal2,seed.NextBool());
            
        }
        
        
    }
}